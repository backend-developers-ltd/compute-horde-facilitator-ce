# Generated by Django 4.2.11 on 2024-05-01 03:20

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0009_minerversion"),
    ]

    operations = [
        migrations.CreateModel(
            name="MinerGpuSpecs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measured_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "name",
                    models.CharField(default="", help_text="model", max_length=255),
                ),
                ("capacity", models.PositiveIntegerField(default=0, help_text="in MB")),
                (
                    "cuda",
                    models.CharField(default="", help_text="version", max_length=255),
                ),
                (
                    "driver",
                    models.CharField(default="", help_text="version", max_length=255),
                ),
                (
                    "graphics_speed",
                    models.PositiveIntegerField(default=0, help_text="in MHz"),
                ),
                (
                    "memory_speed",
                    models.PositiveIntegerField(default=0, help_text="in MHz"),
                ),
                ("power_limit", models.FloatField(default=0, help_text="in MHz")),
            ],
        ),
        migrations.CreateModel(
            name="MinerSpecs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measured_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("gpu_count", models.PositiveIntegerField(default=1)),
                ("os", models.CharField(default="", max_length=255)),
                ("virtualization", models.CharField(default="", max_length=255)),
                (
                    "total_ram",
                    models.PositiveIntegerField(blank=True, default=0, help_text="in kB", null=True),
                ),
                (
                    "total_hdd",
                    models.PositiveIntegerField(blank=True, default=0, help_text="in kB", null=True),
                ),
                ("cpu_model", models.CharField(default="", max_length=255)),
                ("cpu_count", models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="RawSpecsSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("state", models.JSONField()),
                (
                    "measured_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
        ),
        migrations.AddField(
            model_name="gpu",
            name="clock",
            field=models.PositiveIntegerField(default=0, help_text="in MHz"),
        ),
        migrations.AddField(
            model_name="gpu",
            name="memory_type",
            field=models.CharField(default="", max_length=255),
        ),
        migrations.AddField(
            model_name="gpu",
            name="tflops",
            field=models.FloatField(default=0, help_text="theoretical FLOPS"),
        ),
        migrations.AlterField(
            model_name="gpu",
            name="capacity",
            field=models.PositiveIntegerField(default=0, help_text="in MB"),
        ),
        migrations.AddIndex(
            model_name="gpu",
            index=models.Index(fields=["name"], name="idx_gpu_name"),
        ),
        migrations.AddField(
            model_name="rawspecssnapshot",
            name="miner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="raw_specs",
                to="core.miner",
            ),
        ),
        migrations.AddField(
            model_name="rawspecssnapshot",
            name="validator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="raw_specs",
                to="core.validator",
            ),
        ),
        migrations.AddField(
            model_name="minerspecs",
            name="miner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="miner_specs",
                to="core.miner",
            ),
        ),
        migrations.AddField(
            model_name="minerspecs",
            name="validator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="miner_specs",
                to="core.validator",
            ),
        ),
        migrations.AddField(
            model_name="minergpuspecs",
            name="gpu",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.gpu",
            ),
        ),
        migrations.AddField(
            model_name="minergpuspecs",
            name="miner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="miner_gpu_specs",
                to="core.miner",
            ),
        ),
        migrations.AddField(
            model_name="minergpuspecs",
            name="miner_specs",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="gpu_specs",
                to="core.minerspecs",
            ),
        ),
        migrations.AddIndex(
            model_name="rawspecssnapshot",
            index=models.Index(fields=["miner", "measured_at"], name="idx_raw_spec_miner_measured_at"),
        ),
        migrations.AddConstraint(
            model_name="rawspecssnapshot",
            constraint=models.UniqueConstraint(
                fields=("miner", "measured_at"),
                name="unique_raw_spec_miner_measured_at",
            ),
        ),
        migrations.AddIndex(
            model_name="minerspecs",
            index=models.Index(fields=["measured_at"], name="idx_spec_measured_at"),
        ),
        migrations.AddIndex(
            model_name="minerspecs",
            index=models.Index(fields=["miner", "measured_at"], name="idx_spec_miner_measured_at"),
        ),
        migrations.AddConstraint(
            model_name="minerspecs",
            constraint=models.UniqueConstraint(fields=("miner", "measured_at"), name="unique_miner_measured_at"),
        ),
        migrations.AddIndex(
            model_name="minergpuspecs",
            index=models.Index(fields=["measured_at"], name="idx_gpu_spec_measured_at"),
        ),
        migrations.AddIndex(
            model_name="minergpuspecs",
            index=models.Index(fields=["miner", "measured_at"], name="idx_gpu_spec_miner_measured_at"),
        ),
        migrations.AddIndex(
            model_name="minergpuspecs",
            index=models.Index(fields=["gpu", "measured_at", "miner"], name="idx_gpu_spec_gpu_miner_at"),
        ),
    ]
